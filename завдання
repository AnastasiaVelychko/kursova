import tkinter as tk
from tkinter import messagebox, simpledialog
from tkinter import ttk
import csv

# Створення вікна
My_window = tk.Tk()
My_window.title("Телефонна книга")
My_window.geometry("400x350")
My_window["bg"] = "light blue"  # встановлення властивостей вікна

# Функція для додавання нового контакту
def add_contact():
    name = name_entry.get()
    address = address_entry.get()
    email = email_entry.get()
    mobile_phone = mobile_entry.get()

    with open('contacts.csv', mode='a', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow([name, address, email, mobile_phone, ])

    messagebox.showinfo("Успіх", "Контакт успішно доданий")

# Функція для відображення існуючих контактів
def view_contacts():
    with open('contacts.csv', mode='r', encoding='utf-8') as file:
        reader = csv.reader(file)
        contacts = list(reader)
        contacts.sort(key=lambda x: x[0])  # Сортування контактів за ім'ям

    messagebox.showinfo("Контакти",
                        "\n".join([", ".join(contact) for contact in contacts]))

# Функція для видалення контакту
def delete_contact():
    name_to_delete = simpledialog.askstring(
        "Видалення контакту", "Введіть ПІБ контакту, якого бажаєте видалити:")
    with open('contacts.csv', mode='r', encoding='utf-8') as file:
        reader = csv.reader(file)
        contacts = list(reader)

    updated_contacts = [
        contact for contact in contacts if contact[0] != name_to_delete
    ]

    with open('contacts.csv', mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerows(updated_contacts)

    messagebox.showinfo("Успіх", "Контакт успішно видалений")

# Функція для пошуку контакту
def search_contact():
    search_param = simpledialog.askstring(
        "Пошук контакту", "Введіть ПІБ або номер телефону для пошуку:")
    with open('contacts.csv', mode='r', encoding='utf-8') as file:
        reader = csv.reader(file)
        contacts = list(reader)

    found_contacts = [
        contact for contact in contacts if search_param in contact
        or search_param in contact[3] or search_param in contact[4]
    ]

    if found_contacts:
        messagebox.showinfo(
            "Знайдені контакти",
            "\n".join([", ".join(contact) for contact in found_contacts]))
    else:
        messagebox.showinfo("Пошук контакту", "Контакт не знайдений")

# Функція для редагування контакту
def edit_contact():
    name_to_edit = simpledialog.askstring(
        "Редагування контакту", "Введіть ПІБ контакту, якого бажаєте відредагувати:")
    with open('contacts.csv', mode='r', encoding='utf-8') as file:
        reader = csv.reader(file)
        contacts = list(reader)

    # Пошук контакту за ім'ям
    for contact in contacts:
        if contact[0] == name_to_edit:
            # Відображення інформації про контакт у відповідних полях введення
            name_entry.delete(0, tk.END)
            name_entry.insert(0, contact[0])
            address_entry.delete(0, tk.END)
            address_entry.insert(0, contact[1])
            email_entry.delete(0, tk.END)
            email_entry.insert(0, contact[2])
            mobile_entry.delete(0, tk.END)
            mobile_entry.insert(0, contact[3])
            break
    else:
        messagebox.showinfo("Пошук контакту", "Контакт не знайдений")

    # Функція для збереження змін у контакті
    def save_changes():
        new_name = name_entry.get()
        new_address = address_entry.get()
        new_email = email_entry.get()
        new_mobile_phone = mobile_entry.get()

        # Оновлення інформації про контакт
        updated_contacts = []
        for contact in contacts:
            if contact[0] == name_to_edit:
                updated_contacts.append([new_name, new_address, new_email, new_mobile_phone])
            else:
                updated_contacts.append(contact)

        # Збереження оновленої інформації у файлі CSV
        with open('contacts.csv', mode='w', newline='', encoding='utf-8') as file:
            writer = csv.writer(file)
            writer.writerows(updated_contacts)

        messagebox.showinfo("Успіх", "Інформація про контакт успішно оновлена")

    # Додавання кнопки для збереження змін
    save_button = ttk.Button(My_window, text="Зберегти зміни", style="TButton", command=save_changes)
    save_button.grid(row=9, column=0, columnspan=2, padx=10, pady=5)

# Інтерфейс для введення даних нового контакту
tk.Label(My_window, text="ПІБ:", font=("Helvetica", 10, "bold"), fg="blue").grid(row=0, column=0, padx=10, pady=5)
tk.Label(My_window, text="Адреса:", font=("Helvetica", 10, "bold"), fg="green").grid(row=1, column=0, padx=10, pady=5)
tk.Label(My_window, text="Електронна пошта:", font=("Helvetica", 10, "bold"), fg="red").grid(row=2, column=0, padx=10, pady=5)
tk.Label(My_window, text="Мобільний телефон:", font=("Helvetica", 10, "bold"), fg="purple").grid(row=3, column=0, padx=10, pady=5)

name_entry = tk.Entry(My_window, font=("Helvetica", 10))
name_entry.grid(row=0, column=1, padx=10, pady=5)
address_entry = tk.Entry(My_window, font=("Helvetica", 10))
address_entry.grid(row=1, column=1, padx=10, pady=5)
email_entry = tk.Entry(My_window, font=("Helvetica", 10))
email_entry.grid(row=2, column=1, padx=10, pady=5)
mobile_entry = tk.Entry(My_window, font=("Helvetica", 10))
mobile_entry.grid(row=3, column=1, padx=10, pady=5)

# Кнопка для додавання контакту
add_button = ttk.Button(My_window, text="Додати контакт", style="TButton", command=add_contact)
add_button.grid(row=5, column=0, columnspan=2, padx=10, pady=5)

# Кнопка для перегляду контактів
view_button = ttk.Button(My_window,
                        text="Переглянути контакти",
                        style="TButton",
                        command=view_contacts)
view_button.grid(row=6, column=0, columnspan=2, padx=10, pady=5)

# Кнопка для видалення контакту
delete_button = ttk.Button(My_window,
                          text="Видалити контакт",
                          style="TButton",
                          command=delete_contact)
delete_button.grid(row=7, column=0, columnspan=2, padx=10, pady=5)

# Кнопка для пошуку контакту
search_button = ttk.Button(My_window,
                          text="Пошук контакту",
                          style="TButton",
                          command=search_contact)
search_button.grid(row=8, column=0, columnspan=2, padx=10, pady=5)

# Кнопка для редагування контакту
edit_button = ttk.Button(My_window,
                          text="Редагувати контакт",
                          style="TButton",
                          command=edit_contact)
edit_button.grid(row=10, column=0, columnspan=2, padx=10, pady=5)

My_window.mainloop()
